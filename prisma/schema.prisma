generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ActivityType {
  DINING
  SIGHTSEEING
  ACCOMMODATION
  TRANSPORTATION
  OTHER
}

model User {
  id           String   @id
  email        String   @unique
  firstName    String?
  lastName     String?
  profileImage String?
  preferences  Json? // Store default travel preferences
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  trips        Trip[]

  @@map("user")
}

model Trip {
  id             String      @id @default(cuid())
  userId         String
  user           User        @relation(fields: [userId], references: [id])
  title          String
  destination    String
  cityBounds     Json?
  placeId        String?
  latitude       Float?
  longitude      Float?
  startDate      DateTime
  endDate        DateTime
  status         String      @default("draft") // draft, generating, basic_ready, complete, error
  progress       Int         @default(0) // 0-100 progress indicator
  errorCode      String? // For storing error type
  errorMessage   String? // For storing error details
  lastUpdateTime DateTime?
  attemptsCount  Int         @default(0)
  preferences    Json
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  activities     Activity[]
  isPublic       Boolean     @default(false)
  sharedWith     TripShare[]
  mainPhoto      String?
  photoCount     Int         @default(0)

  @@index([userId])
  @@map("trip")
}

model TripShare {
  id        String   @id @default(cuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  userId    String
  role      String   @default("VIEWER") // VIEWER, EDITOR
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([tripId, userId])
  @@index([tripId])
  @@index([userId])
  @@map("trip_share")
}

model Activity {
  id         String   @id @default(cuid())
  tripId     String
  trip       Trip     @relation(fields: [tripId], references: [id])
  type       String
  name       String
  address    String?
  latitude   Float?
  longitude  Float?
  placeId    String?
  startTime  DateTime
  endTime    DateTime
  notes      String?
  priceLevel Int?
  status     String   @default("pending") // pending, complete, error
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([tripId])
  @@map("activity")
}
